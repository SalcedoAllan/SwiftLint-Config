disabled_rules: # rule identifiers to exclude from running
  - control_statement
  - orphaned_doc_comment
  - overridden_super_call
  - private_over_fileprivate
  - switch_case_alignment
  - todo
opt_in_rules: # some rules are only opt-in
  - anyobject_protocol
  - attributes
  - closure_body_length
  - closure_end_indentation
  - closure_spacing
  - collection_alignment
  - conditional_returns_on_newline
  - contains_over_filter_count
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - convenience_type
  - discarded_notification_center_observer
  - discouraged_assert
  - empty_collection_literal
  - empty_count
  - empty_string
  - empty_xctest_method
  - enum_case_associated_values_count
  - expiring_todo
  - explicit_acl
  - explicit_init
  - explicit_top_level_acl
  - explicit_type_interface
  - fallthrough
  - fatal_error_message
  - file_name_no_space
  - file_types_order
  - first_where
  - flatmap_over_map_reduce
  - force_unwrapping
  - function_default_parameter_at_end
  - ibinspectable_in_extension
  - identical_operands
  - implicitly_unwrapped_optional
  - indentation_width
  - joined_default_parameter
  - last_where
  - legacy_multiple
  - legacy_random
  - let_var_whitespace
  - literal_expression_end_indentation
  - lower_acl_than_parent
  - modifier_order
  - multiline_arguments
  - multiline_arguments_brackets
  - multiline_function_chains
  - multiline_literal_brackets
  - multiline_parameters
  - multiline_parameters_brackets
  - number_separator
  - object_literal
  - operator_usage_whitespace
  - prefer_self_type_over_type_of_self
  - private_action
  - private_outlet
  - private_subject
  - reduce_into
  - redundant_nil_coalescing
  - required_deinit
  - single_test_class
  - sorted_imports
  - switch_case_on_newline
  - syntactic_sugar
  - type_contents_order
  - unavailable_function
  - unneeded_parentheses_in_closure_argument
  - unowned_variable_capture
  - unused_declaration
  - unused_import
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - vertical_whitespace_opening_braces
  - yoda_condition
  # Find all the available rules by running:
  # swiftlint rules
included: # paths to include during linting. `--path` is ignored if present.
  #- Source
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Source/ExcludedFolder
  - Source/ExcludedFile.swift
  - Source/*/ExcludedFile.swift # Exclude files with a wildcard
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self
# configurable rules can be customized from this configuration file
# binary rules can set their severity level
closure_body_length:
  warning: 10
  error: 50
collection_alignment:
  align_colons: true
cyclomatic_complexity:
  warning: 15
  error: 30
  ignores_case_statements: true
duplicated_key_in_dictionary_literal: error
empty_collection_literal: error
empty_string: error
fatal_error_message: error
file_length:
  warning: 400
  error: 800
  ignore_comment_only_lines: true
function_body_length:
  warning: 20
  error: 50
identical_operands: error
indentation_width:
  include_comments: false
large_tuple:
  warning: 3
  error: 4
type_body_length:
  warning: 300
  error: 600
line_length:
  warning: 200
  error: 250
  ignores_urls: true
  ignores_comments: true
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names
reporter: "xcode"
